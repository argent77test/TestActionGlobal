# Copyright (c) 2024 Argent77

name: WeiDU Mod Package Builder (core)

on:
  workflow_call:
    inputs:
      # Determines the resulting archive format.
      # Supported values: iemod, windows, linux, macos, multi
      type:
        description: 'The mod package type'
        required: false
        type: string
        default: 'iemod'

      # Determines the architecture of the included setup binary.
      # Supported values: amd64, x86, x86-legacy
      architecture:
        description: 'Architecture of the included setup binary'
        required: false
        type: string
        default: 'amd64'

      # Suffix to add to the mod package filename.
      # Supported values: version, none. Anything else is treated as a literal string.
      # - version: Uses the VERSION definition of the tp2 file of the mod if available.
      # - none:    Indicates that no version suffix should be added.
      suffix:
        description: 'Version suffix added to the mod package name'
        required: false
        type: string
        default: 'version'

      # An arbitrary string that will be appended after the package base name.
      # This can be used to further specialize a package name (e.g. when providing packages for
      # different architectures for the same platform).
      extra:
        description: 'A fixed string that is appended after the package base name, but before a version string'
        required: false
        type: string
        default: ''

      # This parameter defines the mod package base name.
      # Supported types: tp2, ini. Anything else is treated as a literal string.
      # - tp2: Uses the tp2 filename as base for generating the mod package base name.
      # - ini: Fetches the "name" definition from the associated Project Infinity metadata ini file.
      #        Falls back to "tp2" if not available.
      naming:
        description: 'Defines the base name for the mod package.'
        required: false
        type: string
        default: 'tp2'

      # This parameter defines the tp2 filename of the mod to include in the mod package.
      # Specifying this option is only useful if a project contains multiple mods
      # (e.g. EET, EET_end, EET_gui).
      tp2_name:
        description: 'Include only mod that matches the specified tp2 filename.'
        required: false
        type: string
        default: ''

      # WeiDU version to use for the setup binaries for platform-specific zip archives.
      # Specify "latest" to use the latest WeiDU version, or a specific WeiDU version.
      # Currently supported versions: 246 or later.
      weidu_version:
        description: 'Specifies the WeiDU version to include in platform-specific zip archives.'
        required: false
        type: string
        default: 'latest'

      # The prefix string to use for Windows-specific zip archive names.
      prefix_windows:
        description: 'Prefix for the mod package name that is used for the Windows-specific zip archive.'
        required: false
        type: string
        default: 'win'

      # The prefix string to use for Linux-specific zip archive names.
      prefix_linux:
        description: 'Prefix for the mod package name that is used for the Linux-specific zip archive.'
        required: false
        type: string
        default: 'lin'

      # The prefix string to use for macOS-specific zip archive names.
      prefix_macos:
        description: 'Prefix for the mod package name that is used for the macOS-specific zip archive.'
        required: false
        type: string
        default: 'mac'

      # Whether setup scripts in multi-platform mod packages should auto-update the WeiDU binary.
      multi_autoupdate:
        description: 'Specifies whether to enable or disable the WeiDU auto-update feature in setup scripts of multi-platform zip archives.'
        required: false
        type: boolean
        default: true

      # Indices whether duplicate files which only differ in case should be preserved when found in the same folder of the mod.
      # This can be useful on Linux where filesystems are case-sensitive by default. Otherwise, duplicate files with the
      # oldest modification date are removed.
      case_sensitive:
        description: 'Specifies whether duplicate files which only differ in case should be preserved when found in the same folder of the mod.'
        required: false
        type: boolean
        default: false

    outputs:
      # Name of the created mod package.
      weidu_mod_package:
        description: 'Name of the created mod package'
        value: ${{ jobs.packager.outputs.weidu_mod_package }}

jobs:
  packager:
    if: github.ref_type == 'tag' || github.event.release.tag_name

    runs-on: ubuntu-latest

    permissions:
      contents: write

    outputs:
      weidu_mod_package: ${{ steps.create.outputs.weidu_mod_package }}

    steps:
      - id: setup
        name: Set up git configurations
        run: |
          git lfs uninstall
          git config --global core.autocrlf false
          git config --global core.ignorecase true

      - id: prepare_repo
        name: Check out repository
        uses: actions/checkout@v4

      - id: prepare_actions
        name: Check out packager repository
        uses: actions/checkout@v4
        with:
          repository: argent77test/TestActionGlobal
          path: .weidu_packager
          sparse-checkout: dist

      - id: setup_actions
        name: Set up environment variables for packager repository
        run: echo "PACKAGER_PATH=$GITHUB_WORKSPACE/.weidu_packager/dist" >> $GITHUB_ENV

      - id: create
        name: Create mod package
        run: |
          chmod +x $PACKAGER_PATH/weidu_mod_package_builder.sh
          $PACKAGER_PATH/weidu_mod_package_builder.sh \
              "type=${{ inputs.type }}" \
              "arch=${{ inputs.architecture }}" \
              "suffix=${{ inputs.suffix }}" \
              "weidu=${{ inputs.weidu_version }}" \
              "extra=${{ inputs.extra }}" \
              "naming=${{ inputs.naming }}" \
              "tp2_name=${{ inputs.tp2_name }}" \
              "prefix_win=${{ inputs.prefix_windows }}" \
              "prefix_lin=${{ inputs.prefix_linux }}" \
              "prefix_mac=${{ inputs.prefix_macos }}" \
              "multi_autoupdate=${{ inputs.multi_autoupdate }}" \
              "case_sensitive=${{ inputs.case_sensitive }}" || exit 1

      - id: upload
        name: Upload asset to release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.create.outputs.weidu_mod_package }}
          tag: ${{ github.ref || github.event.release.tag_name }}
          overwrite: true
